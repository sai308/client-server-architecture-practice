services:
  app:
    build:
      context: .
      dockerfile: ${DOCKERFILE:-Dockerfile}

    deploy:
      resources:
        limits:
          memory: 8G # Set the maximum memory limit
          cpus: '5.0' # Set the maximum CPU limit
        reservations:
          memory: 4G # Set the guaranteed memory (less than or equal to `limits.memory`)
          cpus: '4.0' # Set the guaranteed CPU (less than or equal to `limits.cpus`)

    networks:
      - app-network
      - app-mongo-network
      - app-redis-network
      - app-postgres-network
    ports:
      - ${DEV_APP_PORT:-} # Debugger port
    volumes:
      - .:/srv/node/app # Mount local directory to container
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - APP_HOST=${APP_HOST:-0.0.0.0}
      - APP_PORT=${APP_PORT:-3000}
      - PRISMA_SYNC_DB=${PRISMA_SYNC_DB:-}
      - PRISMA_REBUILD_CLIENT=${PRISMA_REBUILD_CLIENT:-}
      - APP_PG_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${APP_PG_PORT:-5432}/${POSTGRES_DB}?schema=public
      #- APP_MONGO_DATABASE_URL=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo:${APP_MONGO_PORT:-27017}/${MONGO_DB}
      - APP_MONGO_DATABASE_URL=mongodb://mongo:${APP_MONGO_PORT:-27017}/${MONGO_DB}
    depends_on:
      - postgres
      - mongo
      - redis

  postgres:
    image: postgres:latest
    networks:
      - app-postgres-network
    ports:
      #   - "5432:5432"    # PostgreSQL port
      - ${DEV_POSTGRES_PORT:-}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  mongo:
    image: mongo:latest
    networks:
      - app-mongo-network
    ports:
      #   - "27017:27017"  # MongoDB port
      - ${DEV_MONGO_PORT:-}
    volumes:
      - mongo-data:/data/db
    #environment:
    #  - MONGO_INITDB_DATABASE=admin
    #  - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
    #  - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}

  redis:
    image: redis:latest
    ports:
      #  - '6379:6379' # Redis port
      - ${DEV_REDIS_PORT:-}
    networks:
      - app-redis-network

  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
      - '443:443'
    networks:
      - app-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd:ro # Basic Auth
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./static:/usr/share/nginx/static:ro
      - ./html:/usr/share/nginx/html:ro
    depends_on:
      - app

networks:
  app-network:
    driver: bridge

  app-mongo-network:
    driver: bridge

  app-postgres-network:
    driver: bridge

  app-redis-network:
    driver: bridge

volumes:
  postgres-data:
  mongo-data:
